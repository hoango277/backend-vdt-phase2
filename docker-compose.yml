version: "3.9"

services:
  # -------- BACKEND (FastAPI) --------
  app:
    build: .
    env_file: .env
    ports:
      - "${UVICORN_PORT:-8000}:8000"
    depends_on:
      - kafka
    restart: unless-stopped

  # Kafka consumer -> writes Postgres + Elasticsearch
  processor:
    build: .
    env_file: .env
    command: ["python", "-m", "app.worker"]
    depends_on:
      - kafka
      - db
      - elasticsearch
    restart: unless-stopped

  # -------- DATABASE --------
  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-logocs}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  # -------- KAFKA (KRaft) --------
  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"   # internal listener (container-to-container)
      - "9094:9094"   # host listener (use from your host tools)
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9094,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafkadata:/bitnami/kafka
    restart: unless-stopped

  # -------- ELASTICSEARCH & KIBANA --------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ingest.geoip.downloader.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200 > /dev/null || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 15

  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    restart: unless-stopped

volumes:
  pgdata:
  esdata:
  kafkadata:
